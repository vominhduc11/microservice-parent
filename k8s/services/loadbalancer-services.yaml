# LoadBalancer Services for Production
# These services expose applications externally through cloud provider's load balancer
# Note: Requires cloud provider (AWS, GCP, Azure) or MetalLB for on-premise

---
# API Gateway LoadBalancer
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-lb
  namespace: microservices
  annotations:
    # AWS NLB (Network Load Balancer)
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    # For GCP uncomment below:
    # cloud.google.com/load-balancer-type: "External"
    # For Azure uncomment below:
    # service.beta.kubernetes.io/azure-load-balancer-internal: "false"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: api-gateway
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

---
# Admin Frontend LoadBalancer
apiVersion: v1
kind: Service
metadata:
  name: admin-frontend-lb
  namespace: microservices
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: admin-frontend

---
# Dealer Frontend LoadBalancer
apiVersion: v1
kind: Service
metadata:
  name: dealer-frontend-lb
  namespace: microservices
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: dealer-frontend

---
# Main Frontend LoadBalancer
apiVersion: v1
kind: Service
metadata:
  name: main-frontend-lb
  namespace: microservices
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: main-frontend
