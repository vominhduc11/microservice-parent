apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart-service
  namespace: microservices
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cart-service
  template:
    metadata:
      labels:
        app: cart-service
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox:latest
          command: ['sh', '-c', 'until nc -z postgres-0.postgres 5432; do echo waiting for postgres; sleep 2; done']
      containers:
        - name: cart-service
          image: microservice-parent-cart-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8084
          envFrom:
            - configMapRef:
                name: common-config
            - configMapRef:
                name: postgres-config
            - configMapRef:
                name: redis-config
            - configMapRef:
                name: service-urls
          env:
            - name: DB_NAME
              value: "cart_service_db"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8084
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8084
            initialDelaySeconds: 30
            periodSeconds: 5
